import com.rameses.annotations.*;

class WaterworksChangeInfoInterceptor {

	@DataContext('waterworks_meter') 
	def wmeter; 

	@DataContext('waterworks_stubout_node') 
	def wstuboutnode;

	@Before( pattern="ChangeInfoService.save", eval="#{ args[0]._schemaname == 'waterworks_account' && args[0]._tag == 'meter' }" )
	public void updateMeter( evt ) {
		def info = evt.args[0];
		if( info.meter == null ) {
			info.meterid = null;
		}	
		else {
			info.meterid = info.meter.objid;
			wmeter.find( [objid: info.meterid ] ).update( [currentacctid: info.objid ] );
		}
		//update the previous meter
		def old = info._loginfo.oldvalue;
		if( old.meter?.objid ) {
			wmeter.find( [objid: old.meter.objid ] ).update( [currentacctid: "{NULL}" ] );
		}
	} 

	@Before( pattern="ChangeInfoService.save", eval="#{args[0]._schemaname=='waterworks_account' && args[0]._tag == 'stuboutnode' }" ) 
	public void updateStubout( evt ) {
		def info = evt.args[0];
		if( info.stuboutnode == null ) {
			info.stuboutnodeid = null;
		}
		else {
			info.stuboutnodeid = info.stuboutnode.objid;
			wstuboutnode.find( [objid: info.stuboutnodeid ] ).update( [currentacctid: info.objid ] );
		}
		//update the previous meter
		def old = info._loginfo.oldvalue;
		if( old.stuboutnode?.objid ) {
			wstuboutnode.find( [objid: old.stuboutnode.objid ] ).update( [currentacctid: "{NULL}" ] );
		}
	} 


	

}